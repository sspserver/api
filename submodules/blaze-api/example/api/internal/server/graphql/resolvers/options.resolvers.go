package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"

	"github.com/geniusrabbit/blaze-api/server/graphql/connectors"
	"github.com/geniusrabbit/blaze-api/server/graphql/models"
)

// SetOption is the resolver for the setOption field.
func (r *mutationResolver) SetOption(ctx context.Context, name string, input models.OptionInput) (*models.OptionPayload, error) {
	return r.Resolver.Mutation().SetOption(ctx, name, input)
}

// Option is the resolver for the option field.
func (r *queryResolver) Option(ctx context.Context, name string, optionType models.OptionType, targetID uint64) (*models.OptionPayload, error) {
	return r.Resolver.Query().Option(ctx, name, optionType, targetID)
}

// ListOptions is the resolver for the listOptions field.
func (r *queryResolver) ListOptions(ctx context.Context, filter *models.OptionListFilter, order *models.OptionListOrder, page *models.Page) (*connectors.CollectionConnection[models.Option, models.OptionEdge], error) {
	return r.Resolver.Query().ListOptions(ctx, filter, order, page)
}
