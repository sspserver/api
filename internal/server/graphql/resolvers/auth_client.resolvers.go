package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.66

import (
	"context"

	"github.com/geniusrabbit/blaze-api/server/graphql/connectors"
	"github.com/geniusrabbit/blaze-api/server/graphql/models"
)

// CreateAuthClient is the resolver for the createAuthClient field.
func (r *mutationResolver) CreateAuthClient(ctx context.Context, input models.AuthClientInput) (*models.AuthClientPayload, error) {
	return r.authclients.CreateAuthClient(ctx, &input)
}

// UpdateAuthClient is the resolver for the updateAuthClient field.
func (r *mutationResolver) UpdateAuthClient(ctx context.Context, id string, input models.AuthClientInput) (*models.AuthClientPayload, error) {
	return r.authclients.UpdateAuthClient(ctx, id, &input)
}

// DeleteAuthClient is the resolver for the deleteAuthClient field.
func (r *mutationResolver) DeleteAuthClient(ctx context.Context, id string, msg *string) (*models.AuthClientPayload, error) {
	return r.authclients.DeleteAuthClient(ctx, id, msg)
}

// AuthClient is the resolver for the authClient field.
func (r *queryResolver) AuthClient(ctx context.Context, id string) (*models.AuthClientPayload, error) {
	return r.authclients.AuthClient(ctx, id)
}

// ListAuthClients is the resolver for the listAuthClients field.
func (r *queryResolver) ListAuthClients(ctx context.Context, filter *models.AuthClientListFilter, order *models.AuthClientListOrder, page *models.Page) (*connectors.CollectionConnection[models.AuthClient, models.AuthClientEdge], error) {
	return r.authclients.ListAuthClients(ctx, filter, order, page)
}
