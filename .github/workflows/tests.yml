name: Tests

on:
  push:
    tags:
      - v*
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

env:
  GO_VERSION: "1.23"

jobs:
  can_continue:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get all changed project improtant files
        id: changed-pi-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            .github/workflows/tests.yml
            .github/workflows/docker-build.yml
            **.go
            go.mod
    outputs:
      is: ${{ steps.changed-pi-files.outputs.any_changed }}

  lint:
    needs: [can_continue]
    if: needs.can_continue.outputs.is == 'true'
    runs-on: ubuntu-latest

    permissions:
      # Required: allow read access to the content for analysis.
      contents: read
      # Optional: allow read access to pull request. Use with `only-new-issues` option.
      pull-requests: read
      # Optional: allow write access to checks to allow the action to annotate code in the PR.
      checks: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ~${{ env.GO_VERSION }}

      - name: Install dependencies
        run: go mod download

      - name: Run linters
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          skip-cache: true
          args: --timeout=3m --fix

  test:
    needs: [can_continue, lint]
    if: needs.can_continue.outputs.is == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run tests
        run: go test -v -covermode=count ./...

  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v4
      - run: go test -v -coverprofile=profile.cov ./...
      - name: Send coverage
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: profile.cov
          flag-name: Go-${{ env.GO_VERSION }}
          parallel: true

  # notifies that all test jobs are finished.
  finish:
    needs: coverage
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-goveralls@v1
        with:
          parallel-finished: true
